dist: trusty
sudo: false
language: c

env:
  global:
    - secure: "a0t9fiRiYsKJE3ZKPGXYtTvgHMNlClUhB5DCYg+eKzvBBtIY674GwigKMTu0uxyJKSwKxxe//hE2jS/JHyA2WJrzqBYIyMtwZJxcWNJX51zv5XQH3y1bcCh7nlNE1nZyAzSQkMk5H4FOvkEkK+V7mWcL/PnS4rqdU20hWS6ZcNjixNCK6HjAakAlVn3N0+GOn8vvDAUqgl6nmApRWqrCJo4jsgmrQufDolEclmgzR+1SLwOVWRAdNuvD5Ylre9Jox4SMr0840JTKE84jBCSVvsdIqQYIMYyvxmZLb5EQAycbhP/h5BE/cmeaK11zgeGo8oIylbNrjG10OcoXL2Bd972ppdH/EvsxHOLGrX7KfMj32Lz3WCqZw6H+cfkNtvfJgXSfuYqX9qEqiLjYMiQAEn6Q34hbhmXO125dKsY1Qp7AaAN2azDJ6+P+GDC3OSITtCyGQtxFQxrRRxYPbYUNAmnNQyctMjHCk8gfRrxZOvSVzMVhud9hFhGbNLYFfEfm7OH5RVuGusgszKg5omcRdFWWqjEkPU+9+VoB+E1bQV8jvD7/midIFhvLmwiBBsgvuJaz0HE7EuvOPApOneYSwv/tglJCk3Q4yNBKuoJSdpQbwweTIHM3J0iWoi8mQOdw4QvGT/QsktneGkAHSbj6WbFoxafDZgdMznCy2JYHGwQ="


matrix:
  include:

    # default linux build with gcc
    - os: linux
      env:
        - TEST="linux gcc"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
          - gcc-6
      script:
        - ./configure
        - make
        - make runtest

    # linux build with openssl and gcc
    - os: linux
      env:
        - TEST="linux gcc (openssl)"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-6
      script:
        - ./configure --enable-openssl
        - make
        - make runtest

    # linux build with openssl and clang
    - os: linux
      env:
        - TEST="linux clang (openssl)"
      addons:
        apt:
          packages:
            - clang
      script:
        - CC=clang ./configure --enable-openssl
        - make
        - make runtest

    # default osx build with xcode (clang)
    - os: osx
      env:
        - TEST="osx XCode 8.2"
      osx_image: xcode8.2
      script:
        - ./configure
        - make
        - make runtest

    # code format check
    - os: linux
      env:
        - TEST="clang-format"
      addons:
        apt:
          packages:
            - clang-format-3.9
      script:
        - ./format.sh -d

    # valgrind
    - os: linux
      env:
        - TEST="valgrind (openssl)"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-6
            - valgrind
      script:
        - ./configure --enable-openssl
        - make
        - make runtest-valgrind

    # coverity scan
    - os: linux
      env:
        - TEST="Coverity Scan"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-6
      coverity_scan:
        project:
          name: "pabuhler/libsrtp"
          description: "Build submitted via Travis CI"
          notification_email: pabuhler@cisco.com
        build_command_prepend: ./configure
        build_command: make
        branch_pattern: master
      script:
        - echo -n | openssl s_client -connect scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca-
